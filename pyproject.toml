[build-system]
build-backend = "hatchling.build"
requires = [ "hatchling", "uv-dynamic-versioning" ]

[project]
name = "pimg"
description = "Save an image in clipboard"
readme = "README.md"
keywords = [
  "clipboard",
  "copy",
  "image",
  "paste",
]
license = { text = "MIT" }
authors = [ { name = "eggplants", email = "w10776e8w@yahoo.co.jp" } ]
requires-python = ">=3.9,<4"
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Multimedia :: Sound/Audio",
  "Typing :: Typed",
]
dynamic = [ "version" ]
dependencies = [
  "pygobject>=3,<3.51",
  "pygobject-stubs==2",
]

urls.Repository = "https://github.com/eggplants/pimg"
scripts.pimg = "pimg.main:main"

[dependency-groups]
dev = [
  "mypy>=1.9,<2",
  "pre-commit>=3.7,<5",
  "pytest>=8.1.1,<9",
  "pytest-cov>=5,<7",
  "ruff>=0.5,<0.9",
  "taskipy>=1.12.2,<2",
]
docs = [ "pdoc" ]

[tool.hatch.version]
# tool.hatch.version.source is not listed in official schema.
# https://github.com/ninoseki/uv-dynamic-versioning/issues/21
source = "uv-dynamic-versioning"

[tool.hatch.build.targets.sdist]
sdist.include = [ "pimg" ]
wheel.include = [ "pimg" ]

[tool.ruff]
format.indent-style = "space"
format.quote-style = "double"
lint.select = [
  "ALL",
]
lint.ignore = [
  "D211", # No blank lines allowed before class docstring
  "D213", # Multi-line docstring summary should start at the second line
]
lint.per-file-ignores."main.py" = [
  "T201", # `print` found
]
lint.per-file-ignores."tests/*.py" = [
  "D",
  "S101", # Use of assert detected
]
lint.pydocstyle.convention = "google"

[tool.mypy]
pretty = true
python_version = "3.12"
show_error_codes = true
strict = true

[tool.pyright]
pythonVersion = "3.12"
typeCheckingMode = "strict"
reportMissingModuleSource = false

[tool.uv]
default-groups = [
  "dev",
  "docs",
]

[tool.uv-dynamic-versioning]
vcs = "git"
style = "semver"
fallback-version = "0.0.0"

[tool.taskipy.tasks]
test = "pytest --cov=pimg --cov-report=term"
"test:ci" = "task test --cov-report=xml:cov.xml"
lint = "pre-commit run -a"
profile = "python -m cProfile"
gendoc = "pdoc pimg -o ./docs --docformat google"
